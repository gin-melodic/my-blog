---
// src/pages/posts/index.astro
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';

const allPosts = await getCollection('blog', ({ data }: { data: { title: string; pubDate: Date; description: string; tags: string[]; draft?: boolean; } }) => {
  // Filter out draft posts, etc.
  return !data.draft;
});

// Sort by date in descending order
allPosts.sort((a: { data: { pubDate: number; }; }, b: { data: { pubDate: number; }; }) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

// Get the 3 most recent posts
const recentPosts = allPosts.slice(0, 3);
const olderPosts = allPosts.slice(3);
---

<BaseLayout 
  title="All Posts" 
  description="Browse all technical articles and notes from MELODIC-GIN. Topics include AI, Full-Stack Development, Agent Architecture, and more."
>
  <div class="max-w-6xl mx-auto">
    <h1 class="text-5xl font-black mb-8 tracking-tighter text-white">All Posts</h1>

    <!-- Featured recent posts with animation -->
    <div class="mb-16">
      <h2 class="text-3xl font-bold text-white mb-6 flex items-center">
        <span class="mr-3">âœ¨</span> Latest Posts
      </h2>
      
      <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-4">
        {recentPosts.map((post: { slug: any; data: { title: unknown; description: unknown; pubDate: string | number | Date; tags: any[]; }; }, index: number) => (
          <a 
            href={`/posts/${post.slug}/`} 
            class="block p-6 bg-white/20 text-white rounded-lg backdrop-blur-md border border-white hover:shadow-xl hover:border-bauhaus-blue transition-all duration-300 transform hover:-translate-y-2"
            style={`animation: fadeInUp 0.6s ease-out ${index * 0.1 + 0.1}s both;`}
          >
            <div class="flex items-center mb-3">
              <time datetime={post.data.pubDate.toString()} class="text-sm opacity-75">
                {new Date(post.data.pubDate).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}
              </time>
            </div>
            <h3 class="text-xl font-bold text-bauhaus-dark mb-3 line-clamp-2">{post.data.title}</h3>
            <p class="text-white opacity-75 text-sm mb-4 line-clamp-3">{post.data.description}</p>
            <div class="flex flex-wrap gap-1">
              {post.data.tags.slice(0, 2).map((tag: unknown) => (
                <span class="bg-bauhaus-blue/50 text-white px-2 py-1 rounded text-xs">{tag}</span>
              ))}
            </div>
          </a>
        ))}
      </div>
    </div>

    <!-- Older posts -->
    <div>
      <h2 class="text-3xl font-bold text-white mb-6">All Posts</h2>
      <div class="space-y-4">
        {olderPosts.map((post: { slug: any; data: { title: unknown; description: unknown; pubDate: string | number | Date; tags: unknown[]; }; }) => (
          <a 
            href={`/posts/${post.slug}/`} 
            class="block p-6 bg-white/20 text-white rounded-lg backdrop-blur-md border border-white hover:shadow-lg hover:border-bauhaus-blue transition-all duration-300"
          >
            <div class="flex flex-col md:flex-row md:items-center">
              <div class="md:w-3/4">
                <h3 class="text-xl font-bold text-bauhaus-dark mb-2">{post.data.title}</h3>
                <p class="text-white opacity-75 mb-3">{post.data.description}</p>
                <div class="flex flex-wrap gap-1 mb-3">
                  {post.data.tags.slice(0, 3).map((tag: unknown) => (
                    <span class="bg-bauhaus-yellow/50 text-bauhaus-dark px-2 py-1 rounded text-xs">{tag}</span>
                  ))}
                </div>
              </div>
              <div class="md:w-1/4 md:text-right">
                <time datetime={post.data.pubDate.toString()} class="text-sm opacity-75">
                  {new Date(post.data.pubDate).toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' })}
                </time>
              </div>
            </div>
          </a>
        ))}
      </div>
    </div>
  </div>
</BaseLayout>